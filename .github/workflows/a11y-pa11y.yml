name: Accessibility Audit (pa11y)

on:
  push:
  pull_request:
  schedule:
    - cron: '30 6 * * 1,4' # Mon & Thu @ 06:30 UTC
  workflow_dispatch:

permissions:
  contents: read

jobs:
  pa11y:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Ensure jq
        run: |
          jq --version || (sudo apt-get update -y && sudo apt-get install -y jq)

      - name: Run pa11y-ci
        continue-on-error: true
        run: |
          # Write JSON report while preserving pa11y exit code (no piping)
          npx --yes pa11y-ci --config .pa11yci.json --reporter json > pa11y-report.json

      - name: Analyze results
        id: verdict
        if: always()
        run: |
          if [ -f pa11y-report.json ]; then
            TOTAL=$(jq 'length' pa11y-report.json 2>/dev/null || echo 0)
            ERROR_PAGES=$(jq '[.[] | select((.issues | length) > 0)] | length' pa11y-report.json 2>/dev/null || echo 0)
          else
            TOTAL=0
            ERROR_PAGES=0
          fi
          echo "total=${TOTAL}" >> $GITHUB_OUTPUT
          echo "error_pages=${ERROR_PAGES}" >> $GITHUB_OUTPUT

      - name: Upload pa11y report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pa11y-report
          path: pa11y-report.json

      - name: Summarize results
        if: always()
        run: |
          echo "## pa11y-ci report" >> $GITHUB_STEP_SUMMARY
          if [ -f pa11y-report.json ]; then
            # pa11y-ci JSON reporter outputs an array of results
            TOTAL=$(jq 'length' pa11y-report.json 2>/dev/null || echo 0)
            ERROR_PAGES=$(jq '[.[] | select((.issues | length) > 0)] | length' pa11y-report.json 2>/dev/null || echo 0)
            PASSES=$((TOTAL - ERROR_PAGES))
            echo "Total pages: ${TOTAL}  Pass: ${PASSES}  Fail: ${ERROR_PAGES}" >> $GITHUB_STEP_SUMMARY
            if [ "$ERROR_PAGES" != "0" ]; then
              echo "\n### Top issues" >> $GITHUB_STEP_SUMMARY
              # Try to extract first few failing entries; pa11y-ci json may be an array of results
              jq -r '(.results // .) | .[]? | select(.issues) | "- URL: " + (.url // .pageUrl // "") + " (" + ((.issues | length) | tostring) + " issues)"' pa11y-report.json | head -n 10 >> $GITHUB_STEP_SUMMARY || true
            fi
          else
            echo "No pa11y-report.json found." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail if issues detected
        if: always() && steps.verdict.outputs.error_pages != '0'
        run: |
          echo "Accessibility issues detected on ${{ steps.verdict.outputs.error_pages }} page(s). Failing job." >&2
          exit 1

